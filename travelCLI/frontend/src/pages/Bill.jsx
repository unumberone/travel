import React, { useEffect, useState } from "react";
import {
  Container,
  Row,
  Col,
  Card,
  CardBody,
  CardTitle,
  CardText,
  Button
} from "reactstrap";
import { useParams, useNavigate } from "react-router-dom";
import { BASE_URL } from "../utils/config";
import { formatDateVN } from "../utils/timeFormat";
import { getNights } from "../utils/booking";

const Bill = () => {
  const { bookingId } = useParams();
  const navigate = useNavigate();

  const [tour, setTour] = useState(null);
  const [booking, setBooking] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    if (!bookingId) {
      setLoading(false);
      return;
    }

    fetch(`${BASE_URL}/booking/${bookingId}`)
      .then(res => res.json())
      .then(async data => {
        setBooking(data.booking);
        setTour(data.tour);
        setLoading(false);

        // N·∫øu tr·∫°ng th√°i l√† pending, g·ªçi API l·∫•y payUrl v√† m·ªü ra
        if (data.booking && data.booking.status === "pending") {
          try {
            const resPay = await fetch(`${BASE_URL}/booking/${bookingId}/payurl`);
            const payData = await resPay.json();
            if (payData.payUrl) {
              window.location.href = payData.payUrl;
            }
          } catch (e) {
            // Kh√¥ng l√†m g√¨, ch·ªâ hi·ªÉn th·ªã h√≥a ƒë∆°n ch·ªù thanh to√°n
          }
        }
      })
      .catch(() => setLoading(false));
  }, [bookingId]);

  if (!bookingId) {
    return (
      <Container className="py-5 text-center">
        <h4>Kh√¥ng c√≥ th√¥ng tin h√≥a ƒë∆°n!</h4>
        <Button color="primary" onClick={() => navigate(-1)}>
          Quay l·∫°i
        </Button>
      </Container>
    );
  }

  if (loading || !tour || !booking) {
    return (
      <Container className="py-5 text-center">
        <h4>ƒêang t·∫£i th√¥ng tin h√≥a ƒë∆°n...</h4>
      </Container>
    );
  }

  // T√≠nh gi√° m·ªôt ƒë√™m
  const nights = getNights(booking.checkIn, booking.checkOut);
  const pricePerNight = nights > 0 ? Math.round(booking.totalPrice / nights) : booking.totalPrice;

  // X√°c ƒë·ªãnh s·ªë ti·ªÅn ƒë√£ thanh to√°n th·ª±c t·∫ø
  let paidAmount = 0;
  if (booking?.status === "paid") {
    paidAmount = booking?.paymentType === "full"
      ? booking?.totalPrice
      : booking?.totalPrice / 2;
  }

  return (
    <Container className="py-5">
      <Row>
        <Col md={8}>
          {/* Th√¥ng tin ph√≤ng */}
          <Card className="mb-3 shadow-sm">
            <Row className="g-0">
              <Col md={4}>
                <img
                  src={tour?.hinh_anh?.[0] || ""}
                  alt="main-img"
                  className="img-fluid rounded mb-2"
                  style={{ height: "200px", objectFit: "cover", width: "100%" }}
                />
              </Col>
              <Col md={8}>
                <CardBody>
                  <CardTitle tag="h5">{tour?.ten || tour?.name || "T√™n ph√≤ng"}</CardTitle>
                  <CardText>
                    <small>{tour?.dia_chi || tour?.address} {tour?.tinh_thanh ? `- ${tour.tinh_thanh}` : ""}</small>
                  </CardText>
                  <CardText>
                    <b>Ti·ªán nghi:</b> {Array.isArray(tour?.tien_ich) ? tour.tien_ich.join(", ") : tour?.amenities}
                  </CardText>
                  <CardText>
                    <b>ƒê√°nh gi√°:</b> {tour?.rating || 5}‚òÖ ({tour?.reviews || 5})
                  </CardText>
                </CardBody>
              </Col>
            </Row>
          </Card>

          {/* H√≥a ƒë∆°n ƒë·∫∑t ph√≤ng */}
          <Card className="mb-3 shadow-sm" style={{ border: "1px solid #19875433" }}>
            <CardBody>
              <CardTitle tag="h5" className="mb-3 text-success">H√≥a ƒë∆°n ƒë·∫∑t ph√≤ng</CardTitle>
              <CardText className="mb-2">
                <b>Nh·∫≠n ph√≤ng:</b> {booking?.checkIn ? formatDateVN(booking.checkIn) : ""}
              </CardText>
              <CardText className="mb-2">
                <b>Tr·∫£ ph√≤ng:</b> {booking?.checkOut ? formatDateVN(booking.checkOut) : ""}
              </CardText>
              <CardText className="mb-2">
                <b>S·ªë kh√°ch:</b> {booking?.guests}
              </CardText>
              <CardText className="mb-2">
                <b>T·ªïng ti·ªÅn:</b> <span className="text-danger">{booking?.totalPrice?.toLocaleString()} ‚Ç´</span>
              </CardText>
              <CardText className="mb-2">
                <b>Tr·∫°ng th√°i thanh to√°n:</b>{" "}
                <span className={
                  booking?.status === "paid"
                    ? "text-success fw-bold"
                    : booking?.status === "pending"
                      ? "text-warning fw-bold"
                      : "text-danger fw-bold"
                }>
                  {booking?.status === "paid"
                    ? "ƒê√£ thanh to√°n"
                    : booking?.status === "pending"
                      ? "Ch·ªù thanh to√°n"
                      : "ƒê√£ h·ªßy"}
                </span>
              </CardText>
              {/* N·∫øu ch·ªù thanh to√°n, hi·ªÉn th·ªã n√∫t thanh to√°n l·∫°i n·∫øu c·∫ßn */}
              {booking?.status === "pending" && (
                <div className="mt-3">
                  <Button
                    color="danger"
                    size="lg"
                    onClick={async () => {
                      if (booking.payUrl) {
                        window.location.href = booking.payUrl;
                      } else {
                        alert("Kh√¥ng th·ªÉ l·∫•y link thanh to√°n. Vui l√≤ng th·ª≠ l·∫°i sau.");
                      }
                    }}
                  >
                    Thanh to√°n l·∫°i v·ªõi MoMo
                  </Button>
                  <div className="text-muted mt-2" style={{ fontSize: 14 }}>
                    N·∫øu b·∫°n ch∆∞a thanh to√°n ho·∫∑c b·ªã gi√°n ƒëo·∫°n, h√£y b·∫•m n√∫t tr√™n ƒë·ªÉ thanh to√°n l·∫°i.
                  </div>
                </div>
              )}
            </CardBody>
          </Card>

          {/* Th√¥ng tin li√™n h·ªá */}
          <Card className="mb-3 shadow-sm" style={{ border: "1px solid #0d6efd33" }}>
            <CardBody>
              <h5 className="mb-3">Th√¥ng tin li√™n h·ªá</h5>
              <CardText>
                <b>Kh√°ch h√†ng:</b> {booking?.contactInfo?.name}
              </CardText>
              <CardText>
                <b>S·ªë ƒëi·ªán tho·∫°i:</b> {booking?.contactInfo?.phone}
              </CardText>
              <CardText>
                <b>Email:</b> {booking?.contactInfo?.email}
              </CardText>
              <CardText>
                <b>Y√™u c·∫ßu ƒë·∫∑c bi·ªát:</b> {booking?.contactInfo?.note || "Kh√¥ng"}
              </CardText>
            </CardBody>
          </Card>
        </Col>

        <Col md={4}>
          {/* Chi ti·∫øt thanh to√°n */}
          <Card className="mb-3 shadow-sm" style={{ border: "1px solid #ffc10755" }}>
            <CardBody>
              <h5 className="mb-3">Chi ti·∫øt thanh to√°n</h5>
              <Row>
                <Col>Gi√° m·ªôt ƒë√™m</Col>
                <Col className="text-end">{pricePerNight?.toLocaleString()} ‚Ç´</Col>
              </Row>
              <hr />
              <Row>
                <Col>T·ªïng gi√° ph√≤ng</Col>
                <Col className="text-end">{booking?.totalPrice?.toLocaleString()} ‚Ç´</Col>
              </Row>
              <hr />
              <Row>
                <Col>
                  <b>ƒê√£ thanh to√°n</b>
                </Col>
                <Col className="text-end">
                  <b className={
                    booking?.status === "paid"
                      ? (booking?.paymentType === "full"
                        ? "text-success"
                        : "text-warning")
                      : "text-secondary"
                  }>
                    {booking?.status === "paid"
                      ? (booking?.paymentType === "full"
                        ? booking?.totalPrice?.toLocaleString() + " ‚Ç´"
                        : (booking?.totalPrice / 2)?.toLocaleString() + " ‚Ç´")
                      : "0 ‚Ç´"}
                  </b>
                </Col>
              </Row>
              {booking?.status === "paid" && booking?.paymentType === "partial" && (
                <div className="mt-2 text-muted" style={{ fontSize: 13 }}>
                  üí∞ C√≤n l·∫°i <b>{(booking?.totalPrice / 2)?.toLocaleString()} ‚Ç´</b> s·∫Ω thanh to√°n khi nh·∫≠n ph√≤ng.
                </div>
              )}
              <div className="mt-2" style={{ fontSize: 13 }}>
                <b>H√¨nh th·ª©c thanh to√°n:</b>{" "}
                {booking?.paymentType === "full"
                  ? "Thanh to√°n to√†n b·ªô"
                  : booking?.paymentType === "partial"
                    ? "ƒê·∫∑t c·ªçc tr∆∞·ªõc 50%"
                    : "Kh√¥ng x√°c ƒë·ªãnh"}
              </div>
            </CardBody>
          </Card>

          <div className="d-grid gap-2">
            <Button color="primary" size="lg" onClick={() => navigate("/")}>
              V·ªÅ trang ch·ªß
            </Button>
          </div>
        </Col>
      </Row>
    </Container>
  );
};

export default Bill;